var search_data = {"index":{"searchIndex":["versioncheck","have_at_least_version?()","have_version?()","new()","rubyversion()","to_s()","history","manifest","readme"],"longSearchIndex":["versioncheck","versioncheck#have_at_least_version?()","versioncheck#have_version?()","versioncheck::new()","versioncheck::rubyversion()","versioncheck#to_s()","","",""],"info":[["VersionCheck","","VersionCheck.html","","<p>VersionCheck is a ruby class provides tests against a packages  version  so\nwe can determine if our code ...\n"],["have_at_least_version?","VersionCheck","VersionCheck.html#method-i-have_at_least_version-3F","(major, minor = nil, update = nil, build = nil)","<p>have_at_least_version tests that the versien of RUBY is newer than the one\nwe want. major, minor, update ...\n"],["have_version?","VersionCheck","VersionCheck.html#method-i-have_version-3F","(major, minor = nil, update = nil, build = nil)","<p>have_version tests that the versien of RUBY is the one we want. Returns\ntrue if match to arguments is ...\n"],["new","VersionCheck","VersionCheck.html#method-c-new","(major,minor=0,update=0,build=0)","<p>Set up the version we are going to check against.\n"],["rubyversion","VersionCheck","VersionCheck.html#method-c-rubyversion","()","<p>Short cut to setting up VersionCheck against current RUBY_VERSION and\nRUBY_PATCHLEVEL\n"],["to_s","VersionCheck","VersionCheck.html#method-i-to_s","()","<p>to_s returns the current Ruby version and build as a string.\n"],["History","","History_txt.html","","<p>1.0.0 / 2012-09-28\n<p>1 major enhancement\n<p>Birthday!\n"],["Manifest","","Manifest_txt.html","","<p>History.txt Manifest.txt README.txt Rakefile lib/versioncheck.rb\ntest/test_versioncheck.rb\n"],["README","","README_txt.html","","<p>versioncheck\n<p>rubyforge.org/projects/versioncheck/\n\n<p>DESCRIPTION:\n"]]}}